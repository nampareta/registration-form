<?php

/**
 * @file
 * EBT Tabs module file.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_field_widget_single_element_WIDGET_TYPE_form_alter().
 */
function ebt_tabs_field_widget_single_element_entity_reference_paragraphs_form_alter(array &$element, FormStateInterface $form_state, array $context) {
  if ($element['#paragraph_type'] != 'ebt_tab') {
    return;
  }

  $options = [
    'text' => 'field_ebt_tab_text',
    'page' => 'field_ebt_tab_page',
    'block' => 'field_ebt_tab_block',
    'views' => 'field_ebt_tab_views',
  ];
  foreach ($options as $option => $field_name) {
    _ebt_tabs_paragraph_field_state($element, $field_name, 'visible', [
      'value' => $option,
    ]);
  }
}

/**
 * Implements hook_field_widget_single_element_WIDGET_TYPE_form_alter().
 */
function ebt_tabs_field_widget_single_element_paragraphs_form_alter(array &$element, FormStateInterface $form_state, array $context) {
  if ($element['#paragraph_type'] != 'ebt_tab') {
    return;
  }

  $options = [
    'text' => 'field_ebt_tab_text',
    'page' => 'field_ebt_tab_page',
    'block' => 'field_ebt_tab_block',
    'views' => 'field_ebt_tab_views',
  ];
  foreach ($options as $option => $field_name) {
    _ebt_tabs_paragraph_field_state($element, $field_name, 'visible', [
      'value' => $option,
    ]);
  }
}

/**
 * Helper function to add state to the element.
 */
function _ebt_tabs_paragraph_field_state(&$element, $field_name, $state_key, array $conditions) {
  if (!isset($element['subform'][$field_name])) {
    return;
  }

  $subform = &$element['subform'];
  $parents = $subform['#parents'];
  $parents[] = 'field_ebt_tab_content';

  $field_id = array_shift($parents);
  $field_id .= '[' . implode('][', $parents) . ']';
  $subform[$field_name]['#states'][$state_key][':input[name="' . $field_id . '"]'] = $conditions;
}

/**
 * Implements hook_form_alter().
 */
function ebt_tabs_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  if ($form_id != 'block_content_ebt_tabs_form') {
    return;
  }

  $form['#validate'][] = '_ebt_tabs_form_validation';

}

/**
 * Form validate for EBT Tabs.
 */
function _ebt_tabs_form_validation(array &$form, FormStateInterface $form_state) {

  $field_ebt_tabs = $form_state->getValue('field_ebt_tabs');

  foreach ($field_ebt_tabs as $field_ebt_tab) {

    _ebt_tabs_form_validate_subform($field_ebt_tab, $form_state);

  }

}

/**
 * Auxiliar function to validate the EBT Tab subform.
 */
function _ebt_tabs_form_validate_subform($field_ebt_tab, &$form_state) {

  $field_ebt_tab_content = $field_ebt_tab['subform']['field_ebt_tab_content'][0]['value'];

  switch ($field_ebt_tab_content) {

    case 'text':

      if (empty($field_ebt_tab['subform']['field_ebt_tab_text'][0]['value'])) {
        $form_state->setErrorByName('field_ebt_tab_text', t('Field "Tab text" is required.'));
      }

      break;

    case 'page':

      if (empty($field_ebt_tab['subform']['field_ebt_tab_page'][0]['target_id'])) {
        $form_state->setErrorByName('field_ebt_tab_page', t('Field "Tab page" is required.'));
      }

      break;

    case 'block':

      if (empty($field_ebt_tab['subform']['field_ebt_tab_block'][0]['plugin_id'])) {
        $form_state->setErrorByName('field_ebt_tab_block', t('Field "Tab Block" is required.'));
      }

      break;

    case 'views':

      if (empty($field_ebt_tab['subform']['field_ebt_tab_views'][0])) {
        $form_state->setErrorByName('field_ebt_tab_views', t('Field "Tab views" is required.'));
      }

      break;

  }
}
